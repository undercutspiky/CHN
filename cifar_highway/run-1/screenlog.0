Number of training examples : 40000
Conv2d(49, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 17: 14.390000 %
47.0 48.0
Accuracy after pruning and training for 1 epoch 17 layer onwards: 77.990000 %
Conv2d(54, 49, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 16: 9.420000 %
65.0 66.0
Accuracy after pruning and training for 1 epoch 16 layer onwards: 22.060000 %
Conv2d(61, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 15: 10.210000 %
84.0 86.0
Accuracy after pruning and training for 1 epoch 15 layer onwards: 19.530000 %
Conv2d(167, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 14: 9.800000 %
106.0 108.0
Accuracy after pruning and training for 1 epoch 14 layer onwards: 18.640000 %
Conv2d(149, 167, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 13: 10.220000 %
^CTraceback (most recent call last):
  File "test.py", line 344, in <module>
    for param in network.highway_layers[i].parameters():
  File "test.py", line 238, in train
    while cursor + batch_size <= len(train_x):  # So that masks are created only once -ignore last batch of smaller size
  File "/home/dhananjay/tf/lib/python2.7/site-packages/torch/nn/modules/module.py", line 206, in __call__
    result = self.forward(*input, **kwargs)
  File "test.py", line 208, in forward
    t_sum, temp1, temp2, temp3 = 0, None, None, None
  File "/home/dhananjay/tf/lib/python2.7/site-packages/torch/nn/modules/module.py", line 206, in __call__
    result = self.forward(*input, **kwargs)
  File "test.py", line 128, in forward
    h = h * Variable(self.mask_h, requires_grad=False).cuda()
  File "/home/dhananjay/tf/lib/python2.7/site-packages/torch/autograd/variable.py", line 240, in cuda
    return CudaTransfer(device_id, async)(self)
  File "/home/dhananjay/tf/lib/python2.7/site-packages/torch/autograd/_functions/tensor.py", line 160, in forward
    return i.cuda(async=self.async)
  File "/home/dhananjay/tf/lib/python2.7/site-packages/torch/_utils.py", line 65, in _cuda
    return new_type(self.size()).copy_(self, async)
KeyboardInterrupt
(tf)dhananjay@o990:~/CHN/cifar_highway/run-1$ python test.py 
Number of training examples : 40000
Conv2d(49, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 17: 85.120000 %
47.0 49.0
Accuracy after pruning and training for 1 epoch 17 layer onwards: 84.990000 %
Conv2d(54, 49, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 16: 19.830000 %
65.0 66.0
Accuracy after pruning and training for 1 epoch 16 layer onwards: 7.720000 %
Conv2d(61, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 15: 10.220000 %
84.0 86.0
Accuracy after pruning and training for 1 epoch 15 layer onwards: 10.400000 %
Conv2d(167, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 14: 9.970000 %
106.0 108.0
Accuracy after pruning and training for 1 epoch 14 layer onwards: 10.310000 %
Conv2d(149, 167, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 13: 10.140000 %
150.0 152.0
Accuracy after pruning and training for 1 epoch 13 layer onwards: 10.250000 %
Conv2d(9, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 11: 9.960000 %
154.0 157.0
Accuracy after pruning and training for 1 epoch 11 layer onwards: 10.050000 %
154.0 157.0
Accuracy after pruning and training for 2 epochs 11 layer onwards: 10.060000 %
Conv2d(62, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 10: 9.770000 %
160.0 163.0
Accuracy after pruning and training for 1 epoch 10 layer onwards: 6.660000 %
160.0 163.0
Accuracy after pruning and training for 2 epochs 10 layer onwards: 6.490000 %
Conv2d(82, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 9: 9.970000 %
180.0 182.0
Accuracy after pruning and training for 1 epoch 9 layer onwards: 10.130000 %
180.0 182.0
Accuracy after pruning and training for 2 epochs 9 layer onwards: 10.130000 %
Conv2d(126, 82, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 8: 9.970000 %
196.0 199.0
Accuracy after pruning and training for 1 epoch 8 layer onwards: 10.020000 %
196.0 199.0
Accuracy after pruning and training for 2 epochs 8 layer onwards: 9.980000 %
Conv2d(87, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 7: 9.770000 %
216.0 221.0
Accuracy after pruning and training for 1 epoch 7 layer onwards: 8.850000 %
216.0 221.0
Accuracy after pruning and training for 2 epochs 7 layer onwards: 8.780000 %
Conv2d(48, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 5: 9.970000 %
228.0 234.0
Accuracy after pruning and training for 1 epoch 5 layer onwards: 9.630000 %
228.0 234.0
Accuracy after pruning and training for 2 epochs 5 layer onwards: 9.540000 %
228.0 234.0
Accuracy after pruning and training for 3 epochs 5 layer onwards: 9.490000 %
Conv2d(64, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 4: 9.770000 %
233.0 239.0
Accuracy after pruning and training for 1 epoch 4 layer onwards: 10.550000 %
233.0 239.0
Accuracy after pruning and training for 2 epochs 4 layer onwards: 10.520000 %
233.0 239.0
Accuracy after pruning and training for 3 epochs 4 layer onwards: 10.530000 %
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 3: 10.530000 %
233.0 239.0
Accuracy after pruning and training for 1 epoch 3 layer onwards: 10.550000 %
233.0 239.0
Accuracy after pruning and training for 2 epochs 3 layer onwards: 10.570000 %
233.0 239.0
Accuracy after pruning and training for 3 epochs 3 layer onwards: 10.600000 %
Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 2: 10.610000 %
233.0 239.0
Accuracy after pruning and training for 1 epoch 2 layer onwards: 10.580000 %
233.0 239.0
Accuracy after pruning and training for 2 epochs 2 layer onwards: 10.510000 %
233.0 239.0
Accuracy after pruning and training for 3 epochs 2 layer onwards: 10.580000 %
Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after completely pruning layer 1: 10.130000 %
235.0 240.0
Accuracy after pruning and training for 1 epoch 1 layer onwards: 9.860000 %
235.0 240.0
Accuracy after pruning and training for 2 epochs 1 layer onwards: 9.800000 %
235.0 240.0
Accuracy after pruning and training for 3 epochs 1 layer onwards: 9.780000 %
234.0 242.0
For epoch 1 	Accuracy on valid set: 17.850000 %
236.0 242.0
For epoch 2 	Accuracy on valid set: 21.470000 %
237.0 243.0
For epoch 3 	Accuracy on valid set: 28.600000 %
237.0 243.0
For epoch 4 	Accuracy on valid set: 32.680000 %
236.0 242.0
For epoch 5 	Accuracy on valid set: 33.870000 %
236.0 242.0
For epoch 6 	Accuracy on valid set: 35.060000 %
236.0 241.0
For epoch 7 	Accuracy on valid set: 33.870000 %
236.0 241.0
For epoch 8 	Accuracy on valid set: 36.800000 %
236.0 241.0
For epoch 9 	Accuracy on valid set: 36.650000 %
236.0 241.0
For epoch 10 	Accuracy on valid set: 36.480000 %
236.0 241.0
For epoch 11 	Accuracy on valid set: 35.120000 %
236.0 241.0
For epoch 12 	Accuracy on valid set: 38.870000 %
237.0 241.0
For epoch 13 	Accuracy on valid set: 40.710000 %
236.0 241.0
For epoch 14 	Accuracy on valid set: 40.860000 %
237.0 241.0
For epoch 15 	Accuracy on valid set: 39.400000 %
237.0 242.0
For epoch 16 	Accuracy on valid set: 41.260000 %
237.0 242.0
For epoch 17 	Accuracy on valid set: 42.280000 %
237.0 242.0
For epoch 18 	Accuracy on valid set: 45.540000 %
237.0 243.0
For epoch 19 	Accuracy on valid set: 43.490000 %
238.0 243.0
For epoch 20 	Accuracy on valid set: 39.520000 %
(tf)dhananjay@o990:~/CHN/cifar_highway/run-1$ exit
dhananjay@o990:~/CHN/cifar_highway/run-1$ source /home/dhananjay/common.sh 
(tf)dhananjay@o990:~/CHN/cifar_highway/run-1$ export cuda_[K[K[K[K[KCUDA)[K_VS[KISIBLE_DEVICES=1
(tf)dhananjay@o990:~/CHN/cifar_highway/run-1$ python test.py 
Traceback (most recent call last):
  File "test.py", line 21, in <module>
    dict_ = unpickle('../data/CIFAR-10/data_batch_' + str(i))
  File "test.py", line 12, in unpickle
    fo = open(file, 'rb')
IOError: [Errno 2] No such file or directory: '../data/CIFAR-10/data_batch_1'
(tf)dhananjay@o990:~/CHN/cifar_highway/run-1$ python test.py 
Number of training examples : 40000
45.0 46.0
For epoch 0 	Accuracy on valid set: 87.320000 %
45.0 46.0
For epoch 1 	Accuracy on valid set: 87.220000 %
45.0 46.0
For epoch 2 	Accuracy on valid set: 87.150000 %
45.0 46.0
For epoch 3 	Accuracy on valid set: 87.170000 %
45.0 46.0
For epoch 4 	Accuracy on valid set: 87.130000 %
45.0 46.0
For epoch 5 	Accuracy on valid set: 87.140000 %
45.0 46.0
For epoch 6 	Accuracy on valid set: 87.110000 %
45.0 46.0
For epoch 7 	Accuracy on valid set: 87.060000 %
45.0 46.0
For epoch 8 	Accuracy on valid set: 87.100000 %
45.0 46.0
For epoch 9 	Accuracy on valid set: 87.050000 %
45.0 46.0
For epoch 10 	Accuracy on valid set: 87.060000 %
45.0 46.0
For epoch 11 	Accuracy on valid set: 87.030000 %
45.0 46.0
For epoch 12 	Accuracy on valid set: 87.060000 %
45.0 46.0
For epoch 13 	Accuracy on valid set: 87.040000 %
45.0 46.0
For epoch 14 	Accuracy on valid set: 87.040000 %
45.0 46.0
For epoch 15 	Accuracy on valid set: 87.010000 %
45.0 46.0
For epoch 16 	Accuracy on valid set: 86.960000 %
45.0 46.0
For epoch 17 	Accuracy on valid set: 87.000000 %
45.0 46.0
For epoch 18 	Accuracy on valid set: 86.970000 %
45.0 45.0
For epoch 19 	Accuracy on valid set: 87.020000 %
45.0 45.0
For epoch 20 	Accuracy on valid set: 86.950000 %
45.0 45.0
For epoch 21 	Accuracy on valid set: 86.950000 %
45.0 45.0
For epoch 22 	Accuracy on valid set: 86.980000 %
44.0 45.0
For epoch 23 	Accuracy on valid set: 86.950000 %
44.0 45.0
For epoch 24 	Accuracy on valid set: 86.990000 %
44.0 45.0
For epoch 25 	Accuracy on valid set: 86.960000 %
44.0 45.0
For epoch 26 	Accuracy on valid set: 87.000000 %
44.0 45.0
For epoch 27 	Accuracy on valid set: 87.010000 %
44.0 45.0
For epoch 28 	Accuracy on valid set: 86.980000 %
44.0 45.0
For epoch 29 	Accuracy on valid set: 87.010000 %
44.0 45.0
For epoch 30 	Accuracy on valid set: 87.010000 %
44.0 45.0
For epoch 31 	Accuracy on valid set: 86.990000 %
44.0 45.0
For epoch 32 	Accuracy on valid set: 86.960000 %
44.0 45.0
For epoch 33 	Accuracy on valid set: 86.950000 %
44.0 45.0
For epoch 34 	Accuracy on valid set: 86.980000 %
44.0 45.0
For epoch 35 	Accuracy on valid set: 86.910000 %
44.0 45.0
For epoch 36 	Accuracy on valid set: 86.940000 %
44.0 45.0
For epoch 37 	Accuracy on valid set: 86.890000 %
44.0 45.0
For epoch 38 	Accuracy on valid set: 86.880000 %
44.0 45.0
For epoch 39 	Accuracy on valid set: 86.900000 %
44.0 45.0
For epoch 40 	Accuracy on valid set: 86.850000 %
44.0 45.0
For epoch 41 	Accuracy on valid set: 86.810000 %
44.0 45.0
For epoch 42 	Accuracy on valid set: 86.820000 %
44.0 45.0
For epoch 43 	Accuracy on valid set: 86.800000 %
44.0 45.0
For epoch 44 	Accuracy on valid set: 86.790000 %
44.0 45.0
For epoch 45 	Accuracy on valid set: 86.760000 %
44.0 45.0
For epoch 46 	Accuracy on valid set: 86.810000 %
44.0 45.0
For epoch 47 	Accuracy on valid set: 86.780000 %
44.0 45.0
For epoch 48 	Accuracy on valid set: 86.760000 %
44.0 44.0
For epoch 49 	Accuracy on valid set: 86.740000 %
Conv2d(256, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 17: 84.880000 %
47.0 48.0
Accuracy after pruning and training for 1 epoch layer 17 onwards: 85.730000 %
Conv2d(256, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 16: 37.770000 %
66.0 68.0
Accuracy after pruning and training for 1 epoch layer 16 onwards: 85.260000 %
Conv2d(256, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 15: 10.220000 %
84.0 86.0
Accuracy after pruning and training for 1 epoch layer 15 onwards: 86.180000 %
Conv2d(256, 71, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 14: 16.890000 %
105.0 107.0
Accuracy after pruning and training for 1 epoch layer 14 onwards: 85.640000 %
Conv2d(256, 245, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 13: 53.620000 %
108.0 111.0
Accuracy after pruning and training for 1 epoch layer 13 onwards: 85.470000 %
Conv2d(128, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 11: 10.160000 %
125.0 126.0
Accuracy after pruning and training for 1 epoch layer 11 onwards: 60.550000 %
125.0 127.0
Accuracy after pruning and training for 2 epochs layer 11 onwards: 66.590000 %
Conv2d(128, 55, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 10: 10.140000 %
154.0 156.0
Accuracy after pruning and training for 1 epoch layer 10 onwards: 40.100000 %
153.0 156.0
Accuracy after pruning and training for 2 epochs layer 10 onwards: 46.680000 %
Conv2d(128, 105, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 9: 10.030000 %
171.0 173.0
Accuracy after pruning and training for 1 epoch layer 9 onwards: 57.390000 %
171.0 173.0
Accuracy after pruning and training for 2 epochs layer 9 onwards: 61.810000 %
Conv2d(128, 118, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 8: 9.770000 %
175.0 178.0
Accuracy after pruning and training for 1 epoch layer 8 onwards: 64.440000 %
175.0 178.0
Accuracy after pruning and training for 2 epochs layer 8 onwards: 66.600000 %
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 7: 66.600000 %
175.0 177.0
Accuracy after pruning and training for 1 epoch layer 7 onwards: 68.460000 %
175.0 177.0
Accuracy after pruning and training for 2 epochs layer 7 onwards: 70.130000 %
Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 5: 10.760000 %
175.0 177.0
Accuracy after pruning and training for 1 epoch layer 5 onwards: 71.730000 %
175.0 177.0
Accuracy after pruning and training for 2 epochs layer 5 onwards: 72.880000 %
175.0 177.0
Accuracy after pruning and training for 3 epochs layer 5 onwards: 74.020000 %
Conv2d(64, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 4: 11.110000 %
175.0 177.0
Accuracy after pruning and training for 1 epoch layer 4 onwards: 74.980000 %
175.0 177.0
Accuracy after pruning and training for 2 epochs layer 4 onwards: 76.050000 %
175.0 177.0
Accuracy after pruning and training for 3 epochs layer 4 onwards: 76.830000 %
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 3: 76.830000 %
175.0 177.0
Accuracy after pruning and training for 1 epoch layer 3 onwards: 77.740000 %
174.0 176.0
Accuracy after pruning and training for 2 epochs layer 3 onwards: 78.670000 %
174.0 176.0
Accuracy after pruning and training for 3 epochs layer 3 onwards: 79.210000 %
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 2: 79.210000 %
174.0 176.0
Accuracy after pruning and training for 1 epoch layer 2 onwards: 79.830000 %
174.0 176.0
Accuracy after pruning and training for 2 epochs layer 2 onwards: 80.540000 %
174.0 176.0
Accuracy after pruning and training for 3 epochs layer 2 onwards: 81.030000 %
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 1: 81.030000 %
174.0 176.0
Accuracy after pruning and training for 1 epoch layer 1 onwards: 81.570000 %
174.0 176.0
Accuracy after pruning and training for 2 epochs layer 1 onwards: 81.890000 %
174.0 176.0
Accuracy after pruning and training for 3 epochs layer 1 onwards: 82.110000 %
174.0 177.0
For epoch 1 	Accuracy on valid set: 83.670000 %
175.0 177.0
For epoch 2 	Accuracy on valid set: 84.370000 %
175.0 178.0
For epoch 3 	Accuracy on valid set: 84.990000 %
176.0 178.0
For epoch 4 	Accuracy on valid set: 85.570000 %
177.0 179.0
For epoch 5 	Accuracy on valid set: 85.460000 %
177.0 180.0
For epoch 6 	Accuracy on valid set: 85.820000 %
177.0 180.0
For epoch 7 	Accuracy on valid set: 86.220000 %
178.0 180.0
For epoch 8 	Accuracy on valid set: 86.230000 %
178.0 181.0
For epoch 9 	Accuracy on valid set: 86.350000 %
179.0 181.0
For epoch 10 	Accuracy on valid set: 86.520000 %
179.0 181.0
For epoch 11 	Accuracy on valid set: 86.220000 %
179.0 182.0
For epoch 12 	Accuracy on valid set: 86.750000 %
180.0 182.0
For epoch 13 	Accuracy on valid set: 86.890000 %
180.0 183.0
For epoch 14 	Accuracy on valid set: 86.830000 %
181.0 183.0
For epoch 15 	Accuracy on valid set: 86.890000 %
181.0 183.0
For epoch 16 	Accuracy on valid set: 86.980000 %
181.0 184.0
For epoch 17 	Accuracy on valid set: 87.100000 %
182.0 184.0
For epoch 18 	Accuracy on valid set: 87.150000 %
182.0 184.0
For epoch 19 	Accuracy on valid set: 87.060000 %
182.0 185.0
For epoch 20 	Accuracy on valid set: 87.110000 %
(tf)dhananjay@o990:~/CHN/cifar_highway/run-1$ python test.py 
Number of training examples : 40000
Conv2d(256, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 17: 84.140000 %
45.0 46.0
Accuracy after pruning and training for 1 epoch layer 17 onwards: 85.540000 %
Conv2d(256, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 16: 47.230000 %
63.0 64.0
Accuracy after pruning and training for 1 epoch layer 16 onwards: 85.330000 %
Conv2d(256, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 15: 14.900000 %
77.0 78.0
Accuracy after pruning and training for 1 epoch layer 15 onwards: 85.980000 %
Conv2d(256, 45, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 14: 10.740000 %
96.0 97.0
Accuracy after pruning and training for 1 epoch layer 14 onwards: 85.550000 %
Conv2d(256, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 13: 10.120000 %
133.0 135.0
Accuracy after pruning and training for 1 epoch layer 13 onwards: 81.220000 %
Conv2d(128, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 11: 17.340000 %
133.0 135.0
Accuracy after pruning and training for 1 epoch layer 11 onwards: 81.040000 %
133.0 135.0
Accuracy after pruning and training for 2 epochs layer 11 onwards: 81.680000 %
Conv2d(128, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 10: 9.200000 %
134.0 136.0
Accuracy after pruning and training for 1 epoch layer 10 onwards: 81.830000 %
134.0 136.0
Accuracy after pruning and training for 2 epochs layer 10 onwards: 82.340000 %
Conv2d(128, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 9: 10.140000 %
145.0 147.0
Accuracy after pruning and training for 1 epoch layer 9 onwards: 80.100000 %
145.0 147.0
Accuracy after pruning and training for 2 epochs layer 9 onwards: 80.570000 %
Conv2d(128, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 8: 9.520000 %
152.0 154.0
Accuracy after pruning and training for 1 epoch layer 8 onwards: 78.470000 %
152.0 154.0
Accuracy after pruning and training for 2 epochs layer 8 onwards: 79.070000 %
Conv2d(128, 102, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 7: 10.220000 %
161.0 162.0
Accuracy after pruning and training for 1 epoch layer 7 onwards: 74.860000 %
160.0 162.0
Accuracy after pruning and training for 2 epochs layer 7 onwards: 76.710000 %
Conv2d(64, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 5: 10.220000 %
166.0 168.0
Accuracy after pruning and training for 1 epoch layer 5 onwards: 76.250000 %
166.0 168.0
Accuracy after pruning and training for 2 epochs layer 5 onwards: 77.220000 %
166.0 168.0
Accuracy after pruning and training for 3 epochs layer 5 onwards: 78.010000 %
Conv2d(64, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 4: 10.220000 %
173.0 175.0
Accuracy after pruning and training for 1 epoch layer 4 onwards: 71.630000 %
173.0 175.0
Accuracy after pruning and training for 2 epochs layer 4 onwards: 73.490000 %
173.0 175.0
Accuracy after pruning and training for 3 epochs layer 4 onwards: 74.810000 %
Conv2d(64, 49, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 3: 10.450000 %
181.0 184.0
Accuracy after pruning and training for 1 epoch layer 3 onwards: 73.360000 %
181.0 184.0
Accuracy after pruning and training for 2 epochs layer 3 onwards: 75.100000 %
181.0 183.0
Accuracy after pruning and training for 3 epochs layer 3 onwards: 76.320000 %
Conv2d(64, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 2: 10.200000 %
182.0 185.0
Accuracy after pruning and training for 1 epoch layer 2 onwards: 77.730000 %
182.0 185.0
Accuracy after pruning and training for 2 epochs layer 2 onwards: 78.260000 %
182.0 185.0
Accuracy after pruning and training for 3 epochs layer 2 onwards: 78.820000 %
Conv2d(64, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
Accuracy on valid set after pruning layer 1: 10.220000 %
188.0 190.0
Accuracy after pruning and training for 1 epoch layer 1 onwards: 79.600000 %
188.0 190.0
Accuracy after pruning and training for 2 epochs layer 1 onwards: 80.020000 %
188.0 190.0
Accuracy after pruning and training for 3 epochs layer 1 onwards: 80.320000 %
188.0 191.0
For epoch 1 	Accuracy on valid set: 82.590000 %
189.0 191.0
For epoch 2 	Accuracy on valid set: 83.180000 %
189.0 193.0
For epoch 3 	Accuracy on valid set: 84.030000 %
190.0 192.0
For epoch 4 	Accuracy on valid set: 84.480000 %
190.0 193.0
For epoch 5 	Accuracy on valid set: 84.430000 %
191.0 194.0
For epoch 6 	Accuracy on valid set: 84.880000 %
191.0 195.0
For epoch 7 	Accuracy on valid set: 85.170000 %
192.0 195.0
For epoch 8 	Accuracy on valid set: 85.540000 %
192.0 196.0
For epoch 9 	Accuracy on valid set: 85.510000 %
193.0 196.0
For epoch 10 	Accuracy on valid set: 85.540000 %
193.0 196.0
For epoch 11 	Accuracy on valid set: 85.820000 %
193.0 197.0
For epoch 12 	Accuracy on valid set: 85.900000 %
194.0 197.0
For epoch 13 	Accuracy on valid set: 85.960000 %
194.0 197.0
For epoch 14 	Accuracy on valid set: 86.090000 %
194.0 198.0
For epoch 15 	Accuracy on valid set: 86.230000 %
195.0 198.0
For epoch 16 	Accuracy on valid set: 86.190000 %
195.0 199.0
For epoch 17 	Accuracy on valid set: 86.160000 %
195.0 199.0
For epoch 18 	Accuracy on valid set: 86.230000 %
196.0 199.0
For epoch 19 	Accuracy on valid set: 86.420000 %
196.0 200.0
For epoch 20 	Accuracy on valid set: 86.470000 %
196.0 200.0
For epoch 21 	Accuracy on valid set: 86.470000 %
197.0 200.0
For epoch 22 	Accuracy on valid set: 86.490000 %
197.0 200.0
For epoch 23 	Accuracy on valid set: 86.590000 %
197.0 201.0
For epoch 24 	Accuracy on valid set: 86.620000 %
198.0 201.0
For epoch 25 	Accuracy on valid set: 86.500000 %
198.0 201.0
For epoch 26 	Accuracy on valid set: 86.550000 %
198.0 201.0
For epoch 27 	Accuracy on valid set: 86.680000 %
198.0 202.0
For epoch 28 	Accuracy on valid set: 86.730000 %
199.0 202.0
For epoch 29 	Accuracy on valid set: 86.800000 %
199.0 202.0
For epoch 30 	Accuracy on valid set: 86.840000 %
(tf)dhananjay@o990:~/CHN/cifar_highway/run-1$ 